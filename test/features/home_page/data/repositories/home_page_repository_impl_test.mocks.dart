// Mocks generated by Mockito 5.4.4 from annotations
// in weather_app_flutter/test/features/home_page/data/repositories/home_page_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_app_flutter/core/util/network_availability_tools/network_info.dart'
    as _i6;
import 'package:weather_app_flutter/features/home_page/data/datasource/weather_remote_source.dart'
    as _i2;
import 'package:weather_app_flutter/features/home_page/data/models/geocoding_dto.dart'
    as _i5;
import 'package:weather_app_flutter/features/home_page/data/models/weather_dto.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [WeatherRemoteSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRemoteSource extends _i1.Mock
    implements _i2.WeatherRemoteSource {
  @override
  _i3.Future<_i4.WeatherDto?> getWeatherData({
    required double? lat,
    required double? lng,
    required String? units,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeatherData,
          [],
          {
            #lat: lat,
            #lng: lng,
            #units: units,
          },
        ),
        returnValue: _i3.Future<_i4.WeatherDto?>.value(),
        returnValueForMissingStub: _i3.Future<_i4.WeatherDto?>.value(),
      ) as _i3.Future<_i4.WeatherDto?>);

  @override
  _i3.Future<List<_i5.GeocodingDto>> getCityByName(
          {required String? cityName}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCityByName,
          [],
          {#cityName: cityName},
        ),
        returnValue:
            _i3.Future<List<_i5.GeocodingDto>>.value(<_i5.GeocodingDto>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i5.GeocodingDto>>.value(<_i5.GeocodingDto>[]),
      ) as _i3.Future<List<_i5.GeocodingDto>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  @override
  _i3.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
